{
  "kind": "Binding",
  "apiVersion": "servicecatalog.k8s.io/v1alpha1",
  "metadata": {
    "name": "dh-feedhenry-keycloak-apb-latest-5dsh8-6vm4h",
    "generateName": "dh-feedhenry-keycloak-apb-latest-5dsh8-",
    "namespace": "myproject",
    "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/namespaces/myproject/bindings/dh-feedhenry-keycloak-apb-latest-5dsh8-6vm4h",
    "uid": "54c401ab-ae76-11e7-9474-0242ac110002",
    "resourceVersion": "127",
    "creationTimestamp": "2017-10-11T11:21:30Z",
    "finalizers": [
      "kubernetes-incubator/service-catalog"
    ]
  },
  "spec": {
    "instanceRef": {
      "name": "dh-feedhenry-keycloak-apb-latest-5dsh8"
    },
    "secretName": "dh-feedhenry-keycloak-apb-latest-5dsh8-x8syd",
    "externalID": "9753c191-59d9-4364-b4aa-1aa05ac968ce",
    "alphaPodPresetTemplate": {
      "name": "dh-feedhenry-keycloak-apb-latest-5dsh8-x8syd",
      "selector": {
        "matchLabels": {
          "app": "keycloak",
          "service": "keycloak"
        }
      }
    }
  },
  "status": {
    "conditions": []
  }
}

{
  "kind": "InstanceList",
  "apiVersion": "servicecatalog.k8s.io/v1alpha1",
  "metadata": {
    "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/namespaces/myproject/instances",
    "resourceVersion": "115"
  },
  "items": [
    {
      "metadata": {
        "name": "dh-feedhenry-keycloak-apb-latest-5dsh8",
        "generateName": "dh-feedhenry-keycloak-apb-latest-",
        "namespace": "myproject",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/namespaces/myproject/instances/dh-feedhenry-keycloak-apb-latest-5dsh8",
        "uid": "688bbc0b-adcb-11e7-9474-0242ac110002",
        "resourceVersion": "58",
        "creationTimestamp": "2017-10-10T14:58:00Z",
        "finalizers": [
          "kubernetes-incubator/service-catalog"
        ]
      },
      "spec": {
        "serviceClassName": "dh-feedhenry-keycloak-apb-latest",
        "planName": "default",
        "parameters": {
          "ADMIN_NAME": "admin",
          "ADMIN_PASSWORD": "admin"
        },
        "externalID": "aca20745-2de3-4d85-a3e6-90cc8bf4b074"
      },
      "status": {
        "conditions": [
          {
            "type": "Ready",
            "status": "True",
            "lastTransitionTime": "2017-10-10T14:58:40Z",
            "reason": "ProvisionedSuccessfully",
            "message": "The instance was provisioned successfully"
          }
        ],
        "asyncOpInProgress": false,
        "lastOperation": "def50316-2e10-4339-9570-e1bf648b69d3",
        "checksum": "7c69084750ea523af01ab8e99da4c54f938e41602bdc8cbdbca2fede9e20bf36"
      }
    }
  ]
}

{
  "kind": "ServiceClassList",
  "apiVersion": "servicecatalog.k8s.io/v1alpha1",
  "metadata": {
    "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclasses",
    "resourceVersion": "115"
  },
  "items": [
    {
      "metadata": {
        "name": "cakephp-mysql-persistent",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassescakephp-mysql-persistent",
        "uid": "c8eaa757-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "36",
        "creationTimestamp": "2017-10-10T14:03:25Z"
      },
      "brokerName": "template-broker",
      "description": "An example CakePHP application with a MySQL database. For more information about using this template, including OpenShift considerations, see https://github.com/openshift/cakephp-ex/blob/master/README.md.",
      "bindable": true,
      "plans": [],
      "planUpdatable": false,
      "externalID": "af3e0b1a-adc3-11e7-ae22-6e478b655f32",
      "externalMetadata": {
        "console.openshift.io/iconClass": "icon-php",
        "displayName": "CakePHP + MySQL (Persistent)",
        "documentationUrl": "https://github.com/openshift/cakephp-ex",
        "longDescription": "This template defines resources needed to develop a CakePHP application, including a build configuration, application deployment configuration, and database deployment configuration.",
        "providerDisplayName": "Red Hat, Inc.",
        "supportUrl": "https://access.redhat.com"
      },
      "alphaTags": [
        "quickstart",
        "php",
        "cakephp"
      ]
    },
    {
      "metadata": {
        "name": "dancer-mysql-persistent",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesdancer-mysql-persistent",
        "uid": "c93d4973-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "46",
        "creationTimestamp": "2017-10-10T14:03:26Z"
      },
      "brokerName": "template-broker",
      "description": "An example Dancer application with a MySQL database. For more information about using this template, including OpenShift considerations, see https://github.com/openshift/dancer-ex/blob/master/README.md.",
      "bindable": true,
      "plans": [
        {
          "name": "default",
          "externalID": "af45cca0-adc3-11e7-ae22-6e478b655f32",
          "description": "Default plan",
          "bindable": true,
          "free": true,
          "externalMetadata": null,
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "APPLICATION_DOMAIN": {
                "default": "",
                "description": "The exposed hostname that will route to the Dancer service, if left blank a value will be defaulted.",
                "title": "Application Hostname",
                "type": "string"
              },
              "CONTEXT_DIR": {
                "default": "",
                "description": "Set this to the relative path to your project if it is not in the root of your repository.",
                "title": "Context Directory",
                "type": "string"
              },
              "CPAN_MIRROR": {
                "default": "",
                "description": "The custom CPAN mirror URL",
                "title": "Custom CPAN Mirror URL",
                "type": "string"
              },
              "DATABASE_NAME": {
                "default": "sampledb",
                "title": "Database Name",
                "type": "string"
              },
              "DATABASE_PASSWORD": {
                "default": "",
                "title": "Database Password",
                "type": "string"
              },
              "DATABASE_SERVICE_NAME": {
                "default": "database",
                "title": "Database Service Name",
                "type": "string"
              },
              "DATABASE_USER": {
                "default": "",
                "title": "Database Username",
                "type": "string"
              },
              "GITHUB_WEBHOOK_SECRET": {
                "default": "",
                "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
                "title": "GitHub Webhook Secret",
                "type": "string"
              },
              "MEMORY_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the Perl Dancer container can use.",
                "title": "Memory Limit",
                "type": "string"
              },
              "MEMORY_MYSQL_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the MySQL container can use.",
                "title": "Memory Limit (MySQL)",
                "type": "string"
              },
              "NAME": {
                "default": "dancer-mysql-persistent",
                "description": "The name assigned to all of the frontend objects defined in this template.",
                "title": "Name",
                "type": "string"
              },
              "NAMESPACE": {
                "default": "openshift",
                "description": "The OpenShift Namespace where the ImageStream resides.",
                "title": "Namespace",
                "type": "string"
              },
              "PERL_APACHE2_RELOAD": {
                "default": "",
                "description": "Set this to \"true\" to enable automatic reloading of modified Perl modules.",
                "title": "Perl Module Reload",
                "type": "string"
              },
              "SECRET_KEY_BASE": {
                "default": "",
                "description": "Your secret key for verifying the integrity of signed cookies.",
                "title": "Secret Key",
                "type": "string"
              },
              "SOURCE_REPOSITORY_REF": {
                "default": "",
                "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
                "title": "Git Reference",
                "type": "string"
              },
              "SOURCE_REPOSITORY_URL": {
                "default": "https://github.com/openshift/dancer-ex.git",
                "description": "The URL of the repository with your application source code.",
                "title": "Git Repository URL",
                "type": "string"
              },
              "VOLUME_CAPACITY": {
                "default": "1Gi",
                "description": "Volume space available for data, e.g. 512Mi, 2Gi",
                "title": "Volume Capacity",
                "type": "string"
              },
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username",
              "NAME",
              "NAMESPACE",
              "MEMORY_LIMIT",
              "MEMORY_MYSQL_LIMIT",
              "VOLUME_CAPACITY",
              "SOURCE_REPOSITORY_URL",
              "DATABASE_SERVICE_NAME",
              "DATABASE_NAME"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username"
            ],
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "af45cca0-adc3-11e7-ae22-6e478b655f32",
      "externalMetadata": {
        "console.openshift.io/iconClass": "icon-perl",
        "displayName": "Dancer + MySQL (Persistent)",
        "documentationUrl": "https://github.com/openshift/dancer-ex",
        "longDescription": "This template defines resources needed to develop a Dancer based application, including a build configuration, application deployment configuration, and database deployment configuration.",
        "providerDisplayName": "Red Hat, Inc.",
        "supportUrl": "https://access.redhat.com"
      },
      "alphaTags": [
        "quickstart",
        "perl",
        "dancer"
      ]
    },
    {
      "metadata": {
        "name": "dh-feedhenry-3scale-apb-latest",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesdh-feedhenry-3scale-apb-latest",
        "uid": "f5bc9760-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "35",
        "creationTimestamp": "2017-10-10T14:04:41Z"
      },
      "brokerName": "ansible-service-broker",
      "description": "Unlock the power of your APIs",
      "bindable": false,
      "plans": [
        {
          "name": "default",
          "externalID": "default",
          "description": "Deploy 3Scale",
          "free": true,
          "externalMetadata": {
            "schemas": {
              "service_binding": {
                "create": {
                  "openshift_form_definition": [
                    "THREESCALE_DOMAIN",
                    "THREESCALE_ACCESS_TOKEN"
                  ]
                }
              },
              "service_instance": {
                "create": {
                  "openshift_form_definition": [
                    "THREESCALE_DOMAIN",
                    "THREESCALE_ACCESS_TOKEN"
                  ]
                },
                "update": {}
              }
            }
          },
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "THREESCALE_ACCESS_TOKEN": {
                "title": "3Scale access token (https://support.3scale.net/docs/accounts/tokens#creating-access-tokens)",
                "type": "string"
              },
              "THREESCALE_DOMAIN": {
                "title": "3Scale domain name, i.e. \"example-admin.3scale.net\"",
                "type": "string"
              }
            },
            "required": [
              "THREESCALE_DOMAIN",
              "THREESCALE_ACCESS_TOKEN"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "THREESCALE_ACCESS_TOKEN": {
                "title": "3Scale access token (https://support.3scale.net/docs/accounts/tokens#creating-access-tokens)",
                "type": "string"
              },
              "THREESCALE_DOMAIN": {
                "title": "3Scale domain name, i.e. \"example-admin.3scale.net\"",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "d800cb337d496dfddc673240446ef106",
      "externalMetadata": {
        "console.openshift.io/iconClass": "fa fa-superpowers",
        "displayName": "3Scale"
      }
    },
    {
      "metadata": {
        "name": "dh-feedhenry-aerogear-digger-apb-latest",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesdh-feedhenry-aerogear-digger-apb-latest",
        "uid": "f5be9b78-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "34",
        "creationTimestamp": "2017-10-10T14:04:41Z"
      },
      "brokerName": "ansible-service-broker",
      "description": "Mobile CI/CD service that integrates with Jenkins Pipelines to test and build your mobile binaries.",
      "bindable": false,
      "plans": [
        {
          "name": "default",
          "externalID": "default",
          "description": "Default plan",
          "free": true,
          "externalMetadata": {
            "schemas": {
              "service_binding": {
                "create": {
                  "openshift_form_definition": [
                    "ANDROID_LICENSE_AGREEMENT"
                  ]
                }
              },
              "service_instance": {
                "create": {
                  "openshift_form_definition": [
                    "ANDROID_LICENSE_AGREEMENT"
                  ]
                },
                "update": {}
              }
            }
          },
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "ANDROID_LICENSE_AGREEMENT": {
                "default": "",
                "description": "Type 'yes' above to accept the Android SDK License Agreement. https://developer.android.com/studio/terms.html",
                "pattern": "^yes$",
                "title": "Android SDK License Agreement",
                "type": "string"
              }
            },
            "required": [
              "ANDROID_LICENSE_AGREEMENT"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "ANDROID_LICENSE_AGREEMENT": {
                "default": "",
                "description": "Type 'yes' above to accept the Android SDK License Agreement. https://developer.android.com/studio/terms.html",
                "pattern": "^yes$",
                "title": "Android SDK License Agreement",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "59748e3fc456f4e0f41359b3bf743bc1",
      "externalMetadata": {
        "console.openshift.io/iconClass": "font-icon icon-jenkins",
        "displayName": "Mobile CI/CD",
        "longDescription": "To use the Mobile CI/CD service you must first agree to the Android SDK License Agreement. By checking this box you are agreeing to the Android Software Development Kit License agreement which can be read at the following URL: https://developer.android.com/studio/terms.html\n\n. If the box is not checked the installer will take no action."
      },
      "alphaTags": [
        "mobile-service"
      ]
    },
    {
      "metadata": {
        "name": "dh-feedhenry-android-app-apb-latest",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesdh-feedhenry-android-app-apb-latest",
        "uid": "f5bcf084-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "37",
        "creationTimestamp": "2017-10-10T14:04:41Z"
      },
      "brokerName": "ansible-service-broker",
      "description": "This is a sample application generated by apb init",
      "bindable": false,
      "plans": [
        {
          "name": "default",
          "externalID": "default",
          "description": "Sets up an android app via the mobile control panel. The mobile control panel will be deployed if not present.",
          "free": true,
          "externalMetadata": {
            "schemas": {
              "service_binding": {
                "create": {
                  "openshift_form_definition": [
                    "appName"
                  ]
                }
              },
              "service_instance": {
                "create": {
                  "openshift_form_definition": [
                    "appName"
                  ]
                },
                "update": {}
              }
            }
          },
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "appName": {
                "default": "myapp",
                "title": "your new apps name",
                "type": "string"
              }
            },
            "required": [
              "appName"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "appName": {
                "default": "myapp",
                "title": "your new apps name",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "e322c9844c0c3d38b2ed3332a5a4d92e",
      "externalMetadata": {
        "console.openshift.io/iconClass": "fa fa-android",
        "displayName": "Android App"
      },
      "alphaTags": [
        "mobile"
      ]
    },
    {
      "metadata": {
        "name": "dh-feedhenry-cordova-app-apb-latest",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesdh-feedhenry-cordova-app-apb-latest",
        "uid": "f5bd4071-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "39",
        "creationTimestamp": "2017-10-10T14:04:41Z"
      },
      "brokerName": "ansible-service-broker",
      "description": "This is a sample application generated by apb init",
      "bindable": false,
      "plans": [
        {
          "name": "default",
          "externalID": "default",
          "description": "This default plan deploys cordova-apb",
          "free": true,
          "externalMetadata": {
            "schemas": {
              "service_binding": {
                "create": {
                  "openshift_form_definition": [
                    "appName"
                  ]
                }
              },
              "service_instance": {
                "create": {
                  "openshift_form_definition": [
                    "appName"
                  ]
                },
                "update": {}
              }
            }
          },
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "appName": {
                "default": "myapp",
                "title": "your new apps name",
                "type": "string"
              }
            },
            "required": [
              "appName"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "appName": {
                "default": "myapp",
                "title": "your new apps name",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "430bea0dae9d15ba47dbd505b9fd574d",
      "externalMetadata": {
        "console.openshift.io/iconClass": "icon icon-cordova",
        "displayName": "Cordova App"
      },
      "alphaTags": [
        "mobile"
      ]
    },
    {
      "metadata": {
        "name": "dh-feedhenry-ios-app-apb-latest",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesdh-feedhenry-ios-app-apb-latest",
        "uid": "f5bd919a-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "30",
        "creationTimestamp": "2017-10-10T14:04:41Z"
      },
      "brokerName": "ansible-service-broker",
      "description": "This is a sample application generated by apb init",
      "bindable": false,
      "plans": [
        {
          "name": "default",
          "externalID": "default",
          "description": "This default plan deploys ios-apb",
          "free": true,
          "externalMetadata": {
            "schemas": {
              "service_binding": {
                "create": {
                  "openshift_form_definition": [
                    "appName"
                  ]
                }
              },
              "service_instance": {
                "create": {
                  "openshift_form_definition": [
                    "appName"
                  ]
                },
                "update": {}
              }
            }
          },
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "appName": {
                "default": "myapp",
                "title": "your new apps name",
                "type": "string"
              }
            },
            "required": [
              "appName"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "appName": {
                "default": "myapp",
                "title": "your new apps name",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "985f23a9c6475656b0726f512e66b270",
      "externalMetadata": {
        "console.openshift.io/iconClass": "fa fa-apple",
        "displayName": "iOS App"
      },
      "alphaTags": [
        "mobile"
      ]
    },
    {
      "metadata": {
        "name": "dh-feedhenry-keycloak-apb-latest",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesdh-feedhenry-keycloak-apb-latest",
        "uid": "f5be484c-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "32",
        "creationTimestamp": "2017-10-10T14:04:41Z"
      },
      "brokerName": "ansible-service-broker",
      "description": "Keycloak - Open Source Identity and Access Management",
      "bindable": true,
      "plans": [
        {
          "name": "default",
          "externalID": "default",
          "description": "Deploy keycloak",
          "free": true,
          "externalMetadata": {
            "schemas": {
              "service_binding": {
                "create": {
                  "openshift_form_definition": [
                    "ADMIN_NAME",
                    "ADMIN_PASSWORD"
                  ]
                }
              },
              "service_instance": {
                "create": {
                  "openshift_form_definition": [
                    "ADMIN_NAME",
                    "ADMIN_PASSWORD"
                  ]
                },
                "update": {}
              }
            }
          },
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "ADMIN_NAME": {
                "default": "admin",
                "title": "Keycloak admin username",
                "type": "string"
              },
              "ADMIN_PASSWORD": {
                "default": "admin",
                "title": "Keycloak admin password",
                "type": "string"
              }
            },
            "required": [
              "ADMIN_NAME",
              "ADMIN_PASSWORD"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "ADMIN_NAME": {
                "default": "admin",
                "title": "Keycloak admin username",
                "type": "string"
              },
              "ADMIN_PASSWORD": {
                "default": "admin",
                "title": "Keycloak admin password",
                "type": "string"
              }
            },
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "386486e6f56c12ac330ae1c56a1d4ed9",
      "externalMetadata": {
        "console.openshift.io/iconClass": "fa fa-users",
        "displayName": "Keycloak"
      },
      "alphaTags": [
        "mobile-service"
      ]
    },
    {
      "metadata": {
        "name": "django-psql-persistent",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesdjango-psql-persistent",
        "uid": "c8e788da-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "28",
        "creationTimestamp": "2017-10-10T14:03:25Z"
      },
      "brokerName": "template-broker",
      "description": "An example Django application with a PostgreSQL database. For more information about using this template, including OpenShift considerations, see https://github.com/openshift/django-ex/blob/master/README.md.",
      "bindable": true,
      "plans": [
        {
          "name": "default",
          "externalID": "af5e0c81-adc3-11e7-ae22-6e478b655f32",
          "description": "Default plan",
          "bindable": true,
          "free": true,
          "externalMetadata": null,
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "APPLICATION_DOMAIN": {
                "default": "",
                "description": "The exposed hostname that will route to the Django service, if left blank a value will be defaulted.",
                "title": "Application Hostname",
                "type": "string"
              },
              "APP_CONFIG": {
                "default": "",
                "description": "Relative path to Gunicorn configuration file (optional).",
                "title": "Application Configuration File Path",
                "type": "string"
              },
              "CONTEXT_DIR": {
                "default": "",
                "description": "Set this to the relative path to your project if it is not in the root of your repository.",
                "title": "Context Directory",
                "type": "string"
              },
              "DATABASE_ENGINE": {
                "default": "postgresql",
                "description": "Database engine: postgresql, mysql or sqlite (default).",
                "title": "Database Engine",
                "type": "string"
              },
              "DATABASE_NAME": {
                "default": "default",
                "title": "Database Name",
                "type": "string"
              },
              "DATABASE_PASSWORD": {
                "default": "",
                "title": "Database User Password",
                "type": "string"
              },
              "DATABASE_SERVICE_NAME": {
                "default": "postgresql",
                "title": "Database Service Name",
                "type": "string"
              },
              "DATABASE_USER": {
                "default": "django",
                "title": "Database Username",
                "type": "string"
              },
              "DJANGO_SECRET_KEY": {
                "default": "",
                "description": "Set this to a long random string.",
                "title": "Django Secret Key",
                "type": "string"
              },
              "GITHUB_WEBHOOK_SECRET": {
                "default": "",
                "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
                "title": "GitHub Webhook Secret",
                "type": "string"
              },
              "MEMORY_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the Django container can use.",
                "title": "Memory Limit",
                "type": "string"
              },
              "MEMORY_POSTGRESQL_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the PostgreSQL container can use.",
                "title": "Memory Limit (PostgreSQL)",
                "type": "string"
              },
              "NAME": {
                "default": "django-psql-persistent",
                "description": "The name assigned to all of the frontend objects defined in this template.",
                "title": "Name",
                "type": "string"
              },
              "NAMESPACE": {
                "default": "openshift",
                "description": "The OpenShift Namespace where the ImageStream resides.",
                "title": "Namespace",
                "type": "string"
              },
              "PIP_INDEX_URL": {
                "default": "",
                "description": "The custom PyPi index URL",
                "title": "Custom PyPi Index URL",
                "type": "string"
              },
              "SOURCE_REPOSITORY_REF": {
                "default": "",
                "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
                "title": "Git Reference",
                "type": "string"
              },
              "SOURCE_REPOSITORY_URL": {
                "default": "https://github.com/openshift/django-ex.git",
                "description": "The URL of the repository with your application source code.",
                "title": "Git Repository URL",
                "type": "string"
              },
              "VOLUME_CAPACITY": {
                "default": "1Gi",
                "description": "Volume space available for data, e.g. 512Mi, 2Gi",
                "title": "Volume Capacity",
                "type": "string"
              },
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username",
              "NAME",
              "NAMESPACE",
              "MEMORY_LIMIT",
              "MEMORY_POSTGRESQL_LIMIT",
              "VOLUME_CAPACITY",
              "SOURCE_REPOSITORY_URL",
              "DATABASE_SERVICE_NAME",
              "DATABASE_ENGINE",
              "DATABASE_NAME",
              "DATABASE_USER"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username"
            ],
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "af5e0c81-adc3-11e7-ae22-6e478b655f32",
      "externalMetadata": {
        "console.openshift.io/iconClass": "icon-python",
        "displayName": "Django + PostgreSQL (Persistent)",
        "documentationUrl": "https://github.com/openshift/django-ex",
        "longDescription": "This template defines resources needed to develop a Django based application, including a build configuration, application deployment configuration, and database deployment configuration.",
        "providerDisplayName": "Red Hat, Inc.",
        "supportUrl": "https://access.redhat.com"
      },
      "alphaTags": [
        "quickstart",
        "python",
        "django"
      ]
    },
    {
      "metadata": {
        "name": "fh-sync-server",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesfh-sync-server",
        "uid": "c8ea524e-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "29",
        "creationTimestamp": "2017-10-10T14:03:25Z"
      },
      "brokerName": "template-broker",
      "description": "FeedHenry Sync Server",
      "bindable": true,
      "plans": [
        {
          "name": "default",
          "externalID": "b956a6c8-adc3-11e7-ae22-6e478b655f32",
          "description": "Default plan",
          "bindable": true,
          "free": true,
          "externalMetadata": null,
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "MONGODB_ADMIN_PASSWORD": {
                "default": "",
                "description": "Password for the MongoDB admin user. This value will be generated if not specified.",
                "type": "string"
              },
              "MONGODB_USER_NAME": {
                "default": "sync-user",
                "description": "Username for the created MongoDB user.",
                "type": "string"
              },
              "MONGODB_USER_PASSWORD": {
                "default": "",
                "description": "Password for the created MongoDB user. This value will be generated if not specified.",
                "type": "string"
              },
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username"
            ],
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "b956a6c8-adc3-11e7-ae22-6e478b655f32",
      "externalMetadata": {
        "console.openshift.io/iconClass": "icon-nodejs",
        "displayName": "FeedHenry Sync (Persistent)",
        "documentationUrl": "https://github.com/feedhenry/fh-sync-server",
        "longDescription": "Data Synchronisation by FeedHenry.",
        "providerDisplayName": "FeedHenry",
        "supportUrl": "https://github.com/feedhenry/fh-sync-server/issues"
      },
      "alphaTags": [
        "instant-app",
        "sync",
        "mobile-service"
      ]
    },
    {
      "metadata": {
        "name": "jenkins-ephemeral",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesjenkins-ephemeral",
        "uid": "c8e7f3af-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "31",
        "creationTimestamp": "2017-10-10T14:03:25Z"
      },
      "brokerName": "template-broker",
      "description": "Jenkins service, without persistent storage.\n\nWARNING: Any data stored will be lost upon pod destruction. Only use this template for testing.",
      "bindable": true,
      "plans": [
        {
          "name": "default",
          "externalID": "af74f767-adc3-11e7-ae22-6e478b655f32",
          "description": "Default plan",
          "bindable": true,
          "free": true,
          "externalMetadata": null,
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "ENABLE_OAUTH": {
                "default": "true",
                "description": "Whether to enable OAuth OpenShift integration. If false, the static account 'admin' will be initialized with the password 'password'.",
                "title": "Enable OAuth in Jenkins",
                "type": "string"
              },
              "JENKINS_IMAGE_STREAM_TAG": {
                "default": "jenkins:latest",
                "description": "Name of the ImageStreamTag to be used for the Jenkins image.",
                "title": "Jenkins ImageStreamTag",
                "type": "string"
              },
              "JENKINS_SERVICE_NAME": {
                "default": "jenkins",
                "description": "The name of the OpenShift Service exposed for the Jenkins container.",
                "title": "Jenkins Service Name",
                "type": "string"
              },
              "JNLP_SERVICE_NAME": {
                "default": "jenkins-jnlp",
                "description": "The name of the service used for master/slave communication.",
                "title": "Jenkins JNLP Service Name",
                "type": "string"
              },
              "JVM_ARCH": {
                "default": "i386",
                "description": "Whether Jenkins runs with a 32 bit (i386) or 64 bit (x86_64) JVM.",
                "title": "Jenkins JVM Architecture",
                "type": "string"
              },
              "MEMORY_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the container can use.",
                "title": "Memory Limit",
                "type": "string"
              },
              "NAMESPACE": {
                "default": "openshift",
                "description": "The OpenShift Namespace where the Jenkins ImageStream resides.",
                "title": "Jenkins ImageStream Namespace",
                "type": "string"
              },
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username"
            ],
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "af74f767-adc3-11e7-ae22-6e478b655f32",
      "externalMetadata": {
        "console.openshift.io/iconClass": "icon-jenkins",
        "displayName": "Jenkins (Ephemeral)",
        "documentationUrl": "https://docs.openshift.org/latest/using_images/other_images/jenkins.html",
        "longDescription": "This template deploys a Jenkins server capable of managing OpenShift Pipeline builds and supporting OpenShift-based oauth login.  The Jenkins configuration is stored in non-persistent storage, so this configuration should be used for experimental purposes only.",
        "providerDisplayName": "Red Hat, Inc.",
        "supportUrl": "https://access.redhat.com"
      },
      "alphaTags": [
        "instant-app",
        "jenkins"
      ]
    },
    {
      "metadata": {
        "name": "jenkins-persistent",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesjenkins-persistent",
        "uid": "c8e89fb6-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "33",
        "creationTimestamp": "2017-10-10T14:03:25Z"
      },
      "brokerName": "template-broker",
      "description": "Jenkins service, with persistent storage.\n\nNOTE: You must have persistent volumes available in your cluster to use this template.",
      "bindable": true,
      "plans": [
        {
          "name": "default",
          "externalID": "af4d7572-adc3-11e7-ae22-6e478b655f32",
          "description": "Default plan",
          "bindable": true,
          "free": true,
          "externalMetadata": null,
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "ENABLE_OAUTH": {
                "default": "true",
                "description": "Whether to enable OAuth OpenShift integration. If false, the static account 'admin' will be initialized with the password 'password'.",
                "title": "Enable OAuth in Jenkins",
                "type": "string"
              },
              "JENKINS_IMAGE_STREAM_TAG": {
                "default": "jenkins:latest",
                "description": "Name of the ImageStreamTag to be used for the Jenkins image.",
                "title": "Jenkins ImageStreamTag",
                "type": "string"
              },
              "JENKINS_SERVICE_NAME": {
                "default": "jenkins",
                "description": "The name of the OpenShift Service exposed for the Jenkins container.",
                "title": "Jenkins Service Name",
                "type": "string"
              },
              "JNLP_SERVICE_NAME": {
                "default": "jenkins-jnlp",
                "description": "The name of the service used for master/slave communication.",
                "title": "Jenkins JNLP Service Name",
                "type": "string"
              },
              "JVM_ARCH": {
                "default": "i386",
                "description": "Whether Jenkins runs with a 32 bit (i386) or 64 bit (x86_64) JVM.",
                "title": "Jenkins JVM Architecture",
                "type": "string"
              },
              "MEMORY_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the container can use.",
                "title": "Memory Limit",
                "type": "string"
              },
              "NAMESPACE": {
                "default": "openshift",
                "description": "The OpenShift Namespace where the Jenkins ImageStream resides.",
                "title": "Jenkins ImageStream Namespace",
                "type": "string"
              },
              "VOLUME_CAPACITY": {
                "default": "1Gi",
                "description": "Volume space available for data, e.g. 512Mi, 2Gi.",
                "title": "Volume Capacity",
                "type": "string"
              },
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username",
              "VOLUME_CAPACITY"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username"
            ],
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "af4d7572-adc3-11e7-ae22-6e478b655f32",
      "externalMetadata": {
        "console.openshift.io/iconClass": "icon-jenkins",
        "displayName": "Jenkins (Persistent)",
        "documentationUrl": "https://docs.openshift.org/latest/using_images/other_images/jenkins.html",
        "longDescription": "This template deploys a Jenkins server capable of managing OpenShift Pipeline builds and supporting OpenShift-based oauth login.",
        "providerDisplayName": "Red Hat, Inc.",
        "supportUrl": "https://access.redhat.com"
      },
      "alphaTags": [
        "instant-app",
        "jenkins"
      ]
    },
    {
      "metadata": {
        "name": "jenkins-pipeline-example",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesjenkins-pipeline-example",
        "uid": "c8e9fd8d-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "41",
        "creationTimestamp": "2017-10-10T14:03:25Z"
      },
      "brokerName": "template-broker",
      "description": "This example showcases the new Jenkins Pipeline integration in OpenShift,\nwhich performs continuous integration and deployment right on the platform.\nThe template contains a Jenkinsfile - a definition of a multi-stage CI/CD process - that\nleverages the underlying OpenShift platform for dynamic and scalable\nbuilds. OpenShift integrates the status of your pipeline builds into the web\nconsole allowing you to see your entire application lifecycle in a single view.",
      "bindable": true,
      "plans": [
        {
          "name": "default",
          "externalID": "af364b52-adc3-11e7-ae22-6e478b655f32",
          "description": "Default plan",
          "bindable": true,
          "free": true,
          "externalMetadata": null,
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "APPLICATION_DOMAIN": {
                "default": "",
                "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.",
                "title": "Application Hostname",
                "type": "string"
              },
              "CONTEXT_DIR": {
                "default": "",
                "description": "Set this to the relative path to your project if it is not in the root of your repository.",
                "title": "Context Directory",
                "type": "string"
              },
              "DATABASE_ADMIN_PASSWORD": {
                "default": "",
                "description": "Password for the database admin user.",
                "title": "Database Administrator Password",
                "type": "string"
              },
              "DATABASE_NAME": {
                "default": "sampledb",
                "title": "Database Name",
                "type": "string"
              },
              "DATABASE_PASSWORD": {
                "default": "",
                "description": "Password for the MongoDB user.",
                "title": "MongoDB Password",
                "type": "string"
              },
              "DATABASE_SERVICE_NAME": {
                "default": "mongodb",
                "title": "Database Service Name",
                "type": "string"
              },
              "DATABASE_USER": {
                "default": "",
                "description": "Username for MongoDB user that will be used for accessing the database.",
                "title": "MongoDB Username",
                "type": "string"
              },
              "GENERIC_WEBHOOK_SECRET": {
                "default": "",
                "description": "A secret string used to configure the Generic webhook.",
                "title": "Generic Webhook Secret",
                "type": "string"
              },
              "GITHUB_WEBHOOK_SECRET": {
                "default": "",
                "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
                "title": "GitHub Webhook Secret",
                "type": "string"
              },
              "MEMORY_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the Node.js container can use.",
                "title": "Memory Limit",
                "type": "string"
              },
              "MEMORY_MONGODB_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the MongoDB container can use.",
                "title": "Memory Limit (MongoDB)",
                "type": "string"
              },
              "NAME": {
                "default": "nodejs-mongodb-example",
                "description": "The name assigned to all of the frontend objects defined in this template.",
                "title": "Name",
                "type": "string"
              },
              "NAMESPACE": {
                "default": "openshift",
                "description": "The OpenShift Namespace where the NodeJS and MongoDB ImageStreams reside.",
                "title": "Namespace",
                "type": "string"
              },
              "NPM_MIRROR": {
                "default": "",
                "description": "The custom NPM mirror URL",
                "title": "Custom NPM Mirror URL",
                "type": "string"
              },
              "SOURCE_REPOSITORY_REF": {
                "default": "",
                "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
                "title": "Git Reference",
                "type": "string"
              },
              "SOURCE_REPOSITORY_URL": {
                "default": "https://github.com/openshift/nodejs-ex.git",
                "description": "The URL of the repository with your application source code.",
                "title": "Git Repository URL",
                "type": "string"
              },
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username",
              "NAME",
              "SOURCE_REPOSITORY_URL",
              "DATABASE_NAME",
              "MEMORY_LIMIT",
              "MEMORY_MONGODB_LIMIT",
              "DATABASE_SERVICE_NAME",
              "NAMESPACE"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username"
            ],
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "af364b52-adc3-11e7-ae22-6e478b655f32",
      "externalMetadata": {
        "console.openshift.io/iconClass": "icon-jenkins",
        "displayName": "Pipeline Build Example"
      },
      "alphaTags": [
        "instant-app",
        "jenkins"
      ]
    },
    {
      "metadata": {
        "name": "mariadb-persistent",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesmariadb-persistent",
        "uid": "c8e8ee4a-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "44",
        "creationTimestamp": "2017-10-10T14:03:25Z"
      },
      "brokerName": "template-broker",
      "description": "MariaDB database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mariadb-container/blob/master/10.1/README.md.\n\nNOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.",
      "bindable": true,
      "plans": [
        {
          "name": "default",
          "externalID": "af8435a9-adc3-11e7-ae22-6e478b655f32",
          "description": "Default plan",
          "bindable": true,
          "free": true,
          "externalMetadata": null,
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "DATABASE_SERVICE_NAME": {
                "default": "mariadb",
                "description": "The name of the OpenShift Service exposed for the database.",
                "title": "Database Service Name",
                "type": "string"
              },
              "MEMORY_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the container can use.",
                "title": "Memory Limit",
                "type": "string"
              },
              "MYSQL_DATABASE": {
                "default": "sampledb",
                "description": "Name of the MariaDB database accessed.",
                "title": "MariaDB Database Name",
                "type": "string"
              },
              "MYSQL_PASSWORD": {
                "default": "",
                "description": "Password for the MariaDB connection user.",
                "title": "MariaDB Connection Password",
                "type": "string"
              },
              "MYSQL_ROOT_PASSWORD": {
                "default": "",
                "description": "Password for the MariaDB root user.",
                "title": "MariaDB root Password",
                "type": "string"
              },
              "MYSQL_USER": {
                "default": "",
                "description": "Username for MariaDB user that will be used for accessing the database.",
                "title": "MariaDB Connection Username",
                "type": "string"
              },
              "NAMESPACE": {
                "default": "openshift",
                "description": "The OpenShift Namespace where the ImageStream resides.",
                "title": "Namespace",
                "type": "string"
              },
              "VOLUME_CAPACITY": {
                "default": "1Gi",
                "description": "Volume space available for data, e.g. 512Mi, 2Gi.",
                "title": "Volume Capacity",
                "type": "string"
              },
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username",
              "MEMORY_LIMIT",
              "DATABASE_SERVICE_NAME",
              "MYSQL_DATABASE",
              "VOLUME_CAPACITY"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username"
            ],
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "af8435a9-adc3-11e7-ae22-6e478b655f32",
      "externalMetadata": {
        "console.openshift.io/iconClass": "icon-mariadb",
        "displayName": "MariaDB (Persistent)",
        "documentationUrl": "https://github.com/sclorg/mariadb-container/blob/master/10.1/README.md",
        "longDescription": "This template provides a standalone MariaDB server with a database created.  The database is stored on persistent storage.  The database name, username, and password are chosen via parameters when provisioning this service.",
        "providerDisplayName": "Red Hat, Inc.",
        "supportUrl": "https://access.redhat.com"
      },
      "alphaTags": [
        "database",
        "mariadb"
      ]
    },
    {
      "metadata": {
        "name": "mongodb-persistent",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesmongodb-persistent",
        "uid": "c8e9a03d-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "40",
        "creationTimestamp": "2017-10-10T14:03:25Z"
      },
      "brokerName": "template-broker",
      "description": "MongoDB database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mongodb-container/blob/master/3.2/README.md.\n\nNOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.",
      "bindable": true,
      "plans": [
        {
          "name": "default",
          "externalID": "af7ca160-adc3-11e7-ae22-6e478b655f32",
          "description": "Default plan",
          "bindable": true,
          "free": true,
          "externalMetadata": null,
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "DATABASE_SERVICE_NAME": {
                "default": "mongodb",
                "description": "The name of the OpenShift Service exposed for the database.",
                "title": "Database Service Name",
                "type": "string"
              },
              "MEMORY_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the container can use.",
                "title": "Memory Limit",
                "type": "string"
              },
              "MONGODB_ADMIN_PASSWORD": {
                "default": "",
                "description": "Password for the database admin user.",
                "title": "MongoDB Admin Password",
                "type": "string"
              },
              "MONGODB_DATABASE": {
                "default": "sampledb",
                "description": "Name of the MongoDB database accessed.",
                "title": "MongoDB Database Name",
                "type": "string"
              },
              "MONGODB_PASSWORD": {
                "default": "",
                "description": "Password for the MongoDB connection user.",
                "title": "MongoDB Connection Password",
                "type": "string"
              },
              "MONGODB_USER": {
                "default": "",
                "description": "Username for MongoDB user that will be used for accessing the database.",
                "title": "MongoDB Connection Username",
                "type": "string"
              },
              "MONGODB_VERSION": {
                "default": "3.2",
                "description": "Version of MongoDB image to be used (2.4, 2.6, 3.2 or latest).",
                "title": "Version of MongoDB Image",
                "type": "string"
              },
              "NAMESPACE": {
                "default": "openshift",
                "description": "The OpenShift Namespace where the ImageStream resides.",
                "title": "Namespace",
                "type": "string"
              },
              "VOLUME_CAPACITY": {
                "default": "1Gi",
                "description": "Volume space available for data, e.g. 512Mi, 2Gi.",
                "title": "Volume Capacity",
                "type": "string"
              },
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username",
              "MEMORY_LIMIT",
              "DATABASE_SERVICE_NAME",
              "MONGODB_DATABASE",
              "VOLUME_CAPACITY",
              "MONGODB_VERSION"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username"
            ],
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "af7ca160-adc3-11e7-ae22-6e478b655f32",
      "externalMetadata": {
        "console.openshift.io/iconClass": "icon-mongodb",
        "displayName": "MongoDB (Persistent)",
        "documentationUrl": "https://docs.openshift.org/latest/using_images/db_images/mongodb.html",
        "longDescription": "This template provides a standalone MongoDB server with a database created.  The database is stored on persistent storage.  The database name, username, and password are chosen via parameters when provisioning this service.",
        "providerDisplayName": "Red Hat, Inc.",
        "supportUrl": "https://access.redhat.com"
      },
      "alphaTags": [
        "database",
        "mongodb"
      ]
    },
    {
      "metadata": {
        "name": "mysql-persistent",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesmysql-persistent",
        "uid": "c8e94fd3-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "45",
        "creationTimestamp": "2017-10-10T14:03:25Z"
      },
      "brokerName": "template-broker",
      "description": "MySQL database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/mysql-container/blob/master/5.7/README.md.\n\nNOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.",
      "bindable": true,
      "plans": [
        {
          "name": "default",
          "externalID": "af8bd614-adc3-11e7-ae22-6e478b655f32",
          "description": "Default plan",
          "bindable": true,
          "free": true,
          "externalMetadata": null,
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "DATABASE_SERVICE_NAME": {
                "default": "mysql",
                "description": "The name of the OpenShift Service exposed for the database.",
                "title": "Database Service Name",
                "type": "string"
              },
              "MEMORY_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the container can use.",
                "title": "Memory Limit",
                "type": "string"
              },
              "MYSQL_DATABASE": {
                "default": "sampledb",
                "description": "Name of the MySQL database accessed.",
                "title": "MySQL Database Name",
                "type": "string"
              },
              "MYSQL_PASSWORD": {
                "default": "",
                "description": "Password for the MySQL connection user.",
                "title": "MySQL Connection Password",
                "type": "string"
              },
              "MYSQL_ROOT_PASSWORD": {
                "default": "",
                "description": "Password for the MySQL root user.",
                "title": "MySQL root user Password",
                "type": "string"
              },
              "MYSQL_USER": {
                "default": "",
                "description": "Username for MySQL user that will be used for accessing the database.",
                "title": "MySQL Connection Username",
                "type": "string"
              },
              "MYSQL_VERSION": {
                "default": "5.7",
                "description": "Version of MySQL image to be used (5.5, 5.6, 5.7, or latest).",
                "title": "Version of MySQL Image",
                "type": "string"
              },
              "NAMESPACE": {
                "default": "openshift",
                "description": "The OpenShift Namespace where the ImageStream resides.",
                "title": "Namespace",
                "type": "string"
              },
              "VOLUME_CAPACITY": {
                "default": "1Gi",
                "description": "Volume space available for data, e.g. 512Mi, 2Gi.",
                "title": "Volume Capacity",
                "type": "string"
              },
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username",
              "MEMORY_LIMIT",
              "DATABASE_SERVICE_NAME",
              "MYSQL_DATABASE",
              "VOLUME_CAPACITY",
              "MYSQL_VERSION"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username"
            ],
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "af8bd614-adc3-11e7-ae22-6e478b655f32",
      "externalMetadata": {
        "console.openshift.io/iconClass": "icon-mysql-database",
        "displayName": "MySQL (Persistent)",
        "documentationUrl": "https://docs.openshift.org/latest/using_images/db_images/mysql.html",
        "longDescription": "This template provides a standalone MySQL server with a database created.  The database is stored on persistent storage.  The database name, username, and password are chosen via parameters when provisioning this service.",
        "providerDisplayName": "Red Hat, Inc.",
        "supportUrl": "https://access.redhat.com"
      },
      "alphaTags": [
        "database",
        "mysql"
      ]
    },
    {
      "metadata": {
        "name": "nodejs-mongo-persistent",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesnodejs-mongo-persistent",
        "uid": "c8e845ec-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "42",
        "creationTimestamp": "2017-10-10T14:03:25Z"
      },
      "brokerName": "template-broker",
      "description": "An example Node.js application with a MongoDB database. For more information about using this template, including OpenShift considerations, see https://github.com/openshift/nodejs-ex/blob/master/README.md.",
      "bindable": true,
      "plans": [
        {
          "name": "default",
          "externalID": "af65cf3b-adc3-11e7-ae22-6e478b655f32",
          "description": "Default plan",
          "bindable": true,
          "free": true,
          "externalMetadata": null,
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "APPLICATION_DOMAIN": {
                "default": "",
                "description": "The exposed hostname that will route to the Node.js service, if left blank a value will be defaulted.",
                "title": "Application Hostname",
                "type": "string"
              },
              "CONTEXT_DIR": {
                "default": "",
                "description": "Set this to the relative path to your project if it is not in the root of your repository.",
                "title": "Context Directory",
                "type": "string"
              },
              "DATABASE_ADMIN_PASSWORD": {
                "default": "",
                "description": "Password for the database admin user.",
                "title": "Database Administrator Password",
                "type": "string"
              },
              "DATABASE_NAME": {
                "default": "sampledb",
                "title": "Database Name",
                "type": "string"
              },
              "DATABASE_PASSWORD": {
                "default": "",
                "description": "Password for the MongoDB user.",
                "title": "MongoDB Password",
                "type": "string"
              },
              "DATABASE_SERVICE_NAME": {
                "default": "mongodb",
                "title": "Database Service Name",
                "type": "string"
              },
              "DATABASE_USER": {
                "default": "",
                "description": "Username for MongoDB user that will be used for accessing the database.",
                "title": "MongoDB Username",
                "type": "string"
              },
              "GENERIC_WEBHOOK_SECRET": {
                "default": "",
                "description": "A secret string used to configure the Generic webhook.",
                "title": "Generic Webhook Secret",
                "type": "string"
              },
              "GITHUB_WEBHOOK_SECRET": {
                "default": "",
                "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
                "title": "GitHub Webhook Secret",
                "type": "string"
              },
              "MEMORY_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the Node.js container can use.",
                "title": "Memory Limit",
                "type": "string"
              },
              "MEMORY_MONGODB_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the MongoDB container can use.",
                "title": "Memory Limit (MongoDB)",
                "type": "string"
              },
              "NAME": {
                "default": "nodejs-mongo-persistent",
                "description": "The name assigned to all of the frontend objects defined in this template.",
                "title": "Name",
                "type": "string"
              },
              "NAMESPACE": {
                "default": "openshift",
                "description": "The OpenShift Namespace where the ImageStream resides.",
                "title": "Namespace",
                "type": "string"
              },
              "NPM_MIRROR": {
                "default": "",
                "description": "The custom NPM mirror URL",
                "title": "Custom NPM Mirror URL",
                "type": "string"
              },
              "SOURCE_REPOSITORY_REF": {
                "default": "",
                "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
                "title": "Git Reference",
                "type": "string"
              },
              "SOURCE_REPOSITORY_URL": {
                "default": "https://github.com/openshift/nodejs-ex.git",
                "description": "The URL of the repository with your application source code.",
                "title": "Git Repository URL",
                "type": "string"
              },
              "VOLUME_CAPACITY": {
                "default": "1Gi",
                "description": "Volume space available for data, e.g. 512Mi, 2Gi",
                "title": "Volume Capacity",
                "type": "string"
              },
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username",
              "NAME",
              "NAMESPACE",
              "MEMORY_LIMIT",
              "MEMORY_MONGODB_LIMIT",
              "VOLUME_CAPACITY",
              "SOURCE_REPOSITORY_URL",
              "DATABASE_SERVICE_NAME",
              "DATABASE_NAME"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username"
            ],
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "af65cf3b-adc3-11e7-ae22-6e478b655f32",
      "externalMetadata": {
        "console.openshift.io/iconClass": "icon-nodejs",
        "displayName": "Node.js + MongoDB (Persistent)",
        "documentationUrl": "https://github.com/openshift/nodejs-ex",
        "longDescription": "This template defines resources needed to develop a NodeJS application, including a build configuration, application deployment configuration, and database deployment configuration.",
        "providerDisplayName": "Red Hat, Inc.",
        "supportUrl": "https://access.redhat.com"
      },
      "alphaTags": [
        "quickstart",
        "nodejs"
      ]
    },
    {
      "metadata": {
        "name": "postgresql-persistent",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassespostgresql-persistent",
        "uid": "c91eca60-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "43",
        "creationTimestamp": "2017-10-10T14:03:26Z"
      },
      "brokerName": "template-broker",
      "description": "PostgreSQL database service, with persistent storage. For more information about using this template, including OpenShift considerations, see https://github.com/sclorg/postgresql-container/blob/master/9.5.\n\nNOTE: Scaling to more than one replica is not supported. You must have persistent volumes available in your cluster to use this template.",
      "bindable": true,
      "plans": [
        {
          "name": "default",
          "externalID": "af566dab-adc3-11e7-ae22-6e478b655f32",
          "description": "Default plan",
          "bindable": true,
          "free": true,
          "externalMetadata": null,
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "DATABASE_SERVICE_NAME": {
                "default": "postgresql",
                "description": "The name of the OpenShift Service exposed for the database.",
                "title": "Database Service Name",
                "type": "string"
              },
              "MEMORY_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the container can use.",
                "title": "Memory Limit",
                "type": "string"
              },
              "NAMESPACE": {
                "default": "openshift",
                "description": "The OpenShift Namespace where the ImageStream resides.",
                "title": "Namespace",
                "type": "string"
              },
              "POSTGRESQL_DATABASE": {
                "default": "sampledb",
                "description": "Name of the PostgreSQL database accessed.",
                "title": "PostgreSQL Database Name",
                "type": "string"
              },
              "POSTGRESQL_PASSWORD": {
                "default": "",
                "description": "Password for the PostgreSQL connection user.",
                "title": "PostgreSQL Connection Password",
                "type": "string"
              },
              "POSTGRESQL_USER": {
                "default": "",
                "description": "Username for PostgreSQL user that will be used for accessing the database.",
                "title": "PostgreSQL Connection Username",
                "type": "string"
              },
              "POSTGRESQL_VERSION": {
                "default": "9.5",
                "description": "Version of PostgreSQL image to be used (9.2, 9.4, 9.5 or latest).",
                "title": "Version of PostgreSQL Image",
                "type": "string"
              },
              "VOLUME_CAPACITY": {
                "default": "1Gi",
                "description": "Volume space available for data, e.g. 512Mi, 2Gi.",
                "title": "Volume Capacity",
                "type": "string"
              },
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username",
              "MEMORY_LIMIT",
              "DATABASE_SERVICE_NAME",
              "POSTGRESQL_DATABASE",
              "VOLUME_CAPACITY",
              "POSTGRESQL_VERSION"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username"
            ],
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "af566dab-adc3-11e7-ae22-6e478b655f32",
      "externalMetadata": {
        "console.openshift.io/iconClass": "icon-postgresql",
        "displayName": "PostgreSQL (Persistent)",
        "documentationUrl": "https://docs.openshift.org/latest/using_images/db_images/postgresql.html",
        "longDescription": "This template provides a standalone PostgreSQL server with a database created.  The database is stored on persistent storage.  The database name, username, and password are chosen via parameters when provisioning this service.",
        "providerDisplayName": "Red Hat, Inc.",
        "supportUrl": "https://access.redhat.com"
      },
      "alphaTags": [
        "database",
        "postgresql"
      ]
    },
    {
      "metadata": {
        "name": "rails-pgsql-persistent",
        "selfLink": "/apis/servicecatalog.k8s.io/v1alpha1/serviceclassesrails-pgsql-persistent",
        "uid": "c90037e7-adc3-11e7-9474-0242ac110002",
        "resourceVersion": "38",
        "creationTimestamp": "2017-10-10T14:03:26Z"
      },
      "brokerName": "template-broker",
      "description": "An example Rails application with a PostgreSQL database. For more information about using this template, including OpenShift considerations, see https://github.com/openshift/rails-ex/blob/master/README.md.",
      "bindable": true,
      "plans": [
        {
          "name": "default",
          "externalID": "af6d4731-adc3-11e7-ae22-6e478b655f32",
          "description": "Default plan",
          "bindable": true,
          "free": true,
          "externalMetadata": null,
          "alphaInstanceCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "APPLICATION_DOMAIN": {
                "default": "",
                "description": "The exposed hostname that will route to the Rails service, if left blank a value will be defaulted.",
                "title": "Application Hostname",
                "type": "string"
              },
              "APPLICATION_PASSWORD": {
                "default": "secret",
                "description": "The application password that is used within the sample application to authorize access on pages.",
                "title": "Application Password",
                "type": "string"
              },
              "APPLICATION_USER": {
                "default": "openshift",
                "description": "The application user that is used within the sample application to authorize access on pages.",
                "title": "Application Username",
                "type": "string"
              },
              "CONTEXT_DIR": {
                "default": "",
                "description": "Set this to the relative path to your project if it is not in the root of your repository.",
                "title": "Context Directory",
                "type": "string"
              },
              "DATABASE_NAME": {
                "default": "root",
                "title": "Database Name",
                "type": "string"
              },
              "DATABASE_PASSWORD": {
                "default": "",
                "title": "Database Password",
                "type": "string"
              },
              "DATABASE_SERVICE_NAME": {
                "default": "postgresql",
                "title": "Database Service Name",
                "type": "string"
              },
              "DATABASE_USER": {
                "default": "",
                "title": "Database Username",
                "type": "string"
              },
              "GITHUB_WEBHOOK_SECRET": {
                "default": "",
                "description": "Github trigger secret.  A difficult to guess string encoded as part of the webhook URL.  Not encrypted.",
                "title": "GitHub Webhook Secret",
                "type": "string"
              },
              "MEMORY_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the Rails container can use.",
                "title": "Memory Limit",
                "type": "string"
              },
              "MEMORY_POSTGRESQL_LIMIT": {
                "default": "512Mi",
                "description": "Maximum amount of memory the PostgreSQL container can use.",
                "title": "Memory Limit (PostgreSQL)",
                "type": "string"
              },
              "NAME": {
                "default": "rails-pgsql-persistent",
                "description": "The name assigned to all of the frontend objects defined in this template.",
                "title": "Name",
                "type": "string"
              },
              "NAMESPACE": {
                "default": "openshift",
                "description": "The OpenShift Namespace where the ImageStream resides.",
                "title": "Namespace",
                "type": "string"
              },
              "POSTGRESQL_MAX_CONNECTIONS": {
                "default": "100",
                "title": "Maximum Database Connections",
                "type": "string"
              },
              "POSTGRESQL_SHARED_BUFFERS": {
                "default": "12MB",
                "title": "Shared Buffer Amount",
                "type": "string"
              },
              "RAILS_ENV": {
                "default": "production",
                "description": "Environment under which the sample application will run. Could be set to production, development or test.",
                "title": "Rails Environment",
                "type": "string"
              },
              "RUBYGEM_MIRROR": {
                "default": "",
                "description": "The custom RubyGems mirror URL",
                "title": "Custom RubyGems Mirror URL",
                "type": "string"
              },
              "SECRET_KEY_BASE": {
                "default": "",
                "description": "Your secret key for verifying the integrity of signed cookies.",
                "title": "Secret Key",
                "type": "string"
              },
              "SOURCE_REPOSITORY_REF": {
                "default": "",
                "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch.",
                "title": "Git Reference",
                "type": "string"
              },
              "SOURCE_REPOSITORY_URL": {
                "default": "https://github.com/openshift/rails-ex.git",
                "description": "The URL of the repository with your application source code.",
                "title": "Git Repository URL",
                "type": "string"
              },
              "VOLUME_CAPACITY": {
                "default": "1Gi",
                "description": "Volume space available for data, e.g. 512Mi, 2Gi",
                "title": "Volume Capacity",
                "type": "string"
              },
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username",
              "NAME",
              "NAMESPACE",
              "MEMORY_LIMIT",
              "MEMORY_POSTGRESQL_LIMIT",
              "VOLUME_CAPACITY",
              "SOURCE_REPOSITORY_URL",
              "APPLICATION_USER",
              "APPLICATION_PASSWORD",
              "RAILS_ENV",
              "DATABASE_SERVICE_NAME",
              "DATABASE_NAME"
            ],
            "type": "object"
          },
          "alphaBindingCreateParameterSchema": {
            "$schema": "http://json-schema.org/draft-04/schema",
            "additionalProperties": false,
            "properties": {
              "template.openshift.io/requester-username": {
                "description": "OpenShift user requesting provision/bind",
                "title": "Template service broker: requester username",
                "type": "string"
              }
            },
            "required": [
              "template.openshift.io/requester-username"
            ],
            "type": "object"
          }
        }
      ],
      "planUpdatable": false,
      "externalID": "af6d4731-adc3-11e7-ae22-6e478b655f32",
      "externalMetadata": {
        "console.openshift.io/iconClass": "icon-ruby",
        "displayName": "Rails + PostgreSQL (Persistent)",
        "documentationUrl": "https://github.com/openshift/rails-ex",
        "longDescription": "This template defines resources needed to develop a Rails application, including a build configuration, application deployment configuration, and database deployment configuration.",
        "providerDisplayName": "Red Hat, Inc.",
        "supportUrl": "https://access.redhat.com"
      },
      "alphaTags": [
        "quickstart",
        "ruby",
        "rails"
      ]
    }
  ]
}